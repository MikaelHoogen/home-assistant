################# Circadian ##############################################
adaptive_lighting:
  #
  - name: Snickarboa
    lights:
      - light.snickarboa_arbetsbank
      - light.snickarboa_spotlights
    transition: 45
    initial_transition: 5
    interval: 90
    min_brightness: 1
    max_brightness: 100
    min_color_temp: 2200
    max_color_temp: 4000
    sleep_brightness: 1
    take_over_control: true
    separate_turn_on_commands: true
#
#
generic_hygrostat:
  - name: snickarboa_avfuktare
    humidifier: switch.snickarboa_avfuktare
    target_sensor: sensor.snickarboa_humidity
    device_class: dehumidifier
    max_humidity: 85
#
climate:
  - platform: generic_thermostat
    name: Snickarboa
    unique_id: Snickarboa
    cold_tolerance: 0.2
    hot_tolerance: 2
    precision: 0.1
    heater: switch.snickarboa_heater
    target_sensor: sensor.snickarboa_temperature
    min_temp: 0
    activity_temp: 7
#
#
binary_sensor:
  - platform: trend
    sensors:
      snickarboa_frys:
        invert: "true"
        friendly_name: Snickarboa frys
        entity_id: sensor.snickarboa_frys_temperature
#
#
sensor:
  #
  - platform: history_stats
    unique_id: snickarboa_frys_time_today
    name: snickarboa_frys_time_today
    entity_id: binary_sensor.snickarboa_frys
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    end: "{{ now().replace(microsecond=0) }}"
#
utility_meter:
  ######################## Avfuktare #########################################
  #
  ###################
  ### Förbrukning ###
  ###################
  avfuktare_timme:
    unique_id: avfuktare_timme
    source: sensor.avfuktare_consumption
    cycle: hourly
  avfuktare_dag:
    unique_id: avfuktare_dag
    source: sensor.avfuktare_consumption
    cycle: daily
  avfuktare_manad:
    unique_id: avfuktare_manad
    source: sensor.avfuktare_consumption
    cycle: monthly
  avfuktare_ar:
    unique_id: avfuktare_ar
    source: sensor.avfuktare_consumption
    cycle: yearly
  ################
  #
  ########### Värmare ########################################################
  #
  ###################
  ### Förbrukning ###
  ###################
  snickarboa_heater_timme:
    unique_id: snickarboa_heater_timme
    source: sensor.snickarboa_heater_energy
    cycle: hourly
    periodically_resetting: false
  snickarboa_heater_dag:
    unique_id: snickarboa_heater_dag
    source: sensor.snickarboa_heater_energy
    cycle: daily
    periodically_resetting: false
  snickarboa_heater_manad:
    unique_id: snickarboa_heater_manad
    source: sensor.snickarboa_heater_energy
    cycle: monthly
    periodically_resetting: false
  snickarboa_heater_ar:
    unique_id: snickarboa_heater_ar
    source: sensor.snickarboa_heater_energy
    cycle: yearly
    periodically_resetting: false
  #
  ################
  ### Kostnad ####
  ################
  #
  snickarboa_heater_dag_kostnad:
    unique_id: snickarboa_heater_dag_kostnad
    source: sensor.snickarboa_heater_timme_kostnad
    cycle: daily
  snickarboa_heater_manad_kostnad:
    unique_id: snickarboa_heater_manad_kostnad
    source: sensor.snickarboa_heater_timme_kostnad
    cycle: monthly
  snickarboa_heater_ar_kostnad:
    unique_id: snickarboa_heater_ar_kostnad
    source: sensor.snickarboa_heater_timme_kostnad
    cycle: yearly
  #
  #
  ########### Frys ########################################################
  #
  ###################
  ### Förbrukning ###
  ###################
  snickarboa_frys_timme:
    unique_id: snickarboa_frys_timme
    source: sensor.snickarboa_frys_dag
    cycle: hourly
  snickarboa_frys_manad:
    unique_id: snickarboa_frys_manad
    source: sensor.snickarboa_frys_dag
    cycle: monthly
  snickarboa_frys_ar:
    unique_id: snickarboa_frys_ar
    source: sensor.snickarboa_frys_dag
    cycle: yearly
  #
  #

  #
#
input_number:
  snickarboa_light_level:
    name: Ljusstyrka snickarboa för belysning
    min: 0
    max: 1000
    step: 10
    unit_of_measurement: lx
    icon: mdi:lightbulb-on
  # Låg temperatur i snickarboa
  snickarboa_temperature_low:
    name: Snickarboa låg temperatur
    min: 0
    max: 7
    step: 1
    unit_of_measurement: °C
  # Låg temperatur frys i snickarboa
  snickarboa_frys_temperature_low:
    name: Snickarboa frys låg temperatur
    min: -20
    max: -14
    step: 1
    unit_of_measurement: °C
#
#
template:
  - binary_sensor:
      #
      #
      - name: snickarboa_heater
        unique_id: snickarboa_heater
        delay_on:
          minutes: 1
        availability: >
          {{ is_number(states('sensor.p_deferrable1')) }}
        state: >
          {{ states('sensor.p_deferrable1') | float('not_a_number') > 0}}
      #    {{ is_state('binary_sensor.heatpump_emhass', 'on') }}
      
      #
      ### Light level
      - name: snickarboa_lightlevel
        unique_id: snickarboa_lightlevel
        device_class: light
        delay_on:
          minutes: 10
        state: >
          {{ states('sensor.snickarboa_hue_motion_sensor_light_level') | float > states('input_number.snickarboa_light_level') | float }}
      #
      # Belysning närvaro
      - name: snickarboa_presence_light_automation_control
        unique_id: snickarboa_presence_light_automation_control
        state: >
          {{ is_state('binary_sensor.snickarboa_presence', 'on')
            and is_state('binary_sensor.snickarboa_lightlevel', 'off') }}
      #
      ### Närvaro
      - name: snickarboa_presence
        unique_id: snickarboa_presence
        device_class: motion
        delay_off:
          minutes: 5
        state: >
          {{ is_state('binary_sensor.snickarboa_hue_motion_sensor_motion', 'on')
          or is_state('binary_sensor.snickarboa_dorrtrigger', 'on') }}
      #
      ### Låg tempteratur
      - name: snickarboa_tempterature_low
        unique_id: snickarboa_tempterature_low
        delay_on:
          minutes: 1
        delay_off:
          minutes: 10
        state: >
          {{ states('sensor.snickarboa_temperature') | float(0.0) < states('input_number.snickarboa_temperature_low') | float(0.0) }}
      #
      ### Låg temperatur frys
      - name: snickarboa_frys_tempterature_low
        unique_id: snickarboa_frys_tempterature_low
        delay_on:
          minutes: 1
        delay_off:
          minutes: 10
        state: >
          {{ states('sensor.snickarboa_frys_temperature') | float(0.0) > states('input_number.snickarboa_frys_temperature_low') | float(0.0) }}
  #
  - trigger:
      - platform: state
        to: "on"
        from: "off"
        entity_id: binary_sensor.snickarboa_dorrbrytare
    binary_sensor:
      - name: Snickarboa dörrtrigger
        unique_id: Snickarboa dörrtrigger
        auto_off: 30
        state: "true"
  #
  - sensor:
      #
      ### Förbrukning uppvärmning
      - name: snickarboa_heater_power
        unique_id: snickarboa_heater_power
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        availability: "{{ is_number(states('sensor.shellyplug_s_c8c9a3a4f80a_power')) }}"
        state: >
          {{ states('sensor.shellyplug_s_c8c9a3a4f80a_power') | float('nan') }}
      #
      - name: snickarboa_heater_energy
        unique_id: snickarboa_heater_energy
        unit_of_measurement: kWh
        #state_class: measurement
        #device_class: power
        availability: "{{ is_number(states('sensor.shellyplug_s_c8c9a3a4f80a_energy')) }}"
        state: >
          {{ states('sensor.shellyplug_s_c8c9a3a4f80a_energy') | float('nan') }}
#
      #
      #### Förbrukning frys
      - name: snickarboa_frys_dag
        unique_id: snickarboa_frys_dag
        unit_of_measurement: "kWh"
        state_class: total_increasing
        device_class: energy
        availability: "{{ is_number(states('sensor.snickarboa_frys_time_today')) }}"
        state: >
          {{ ( 75.0 * states('sensor.snickarboa_frys_time_today') | float('nan') / 1000.0 ) | round(3) }}
      #
        #
        ### Värmare kostnad
      - name: snickarboa_heater_timme_kostnad
        unique_id: snickarboa_heater_timme_kostnad
        unit_of_measurement: "SEK"
        availability: "{{ is_number(states('sensor.snickarboa_heater_timme')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.snickarboa_heater_timme') | float(0.0) * states('sensor.elpris_totalt_sek') | float(0.0) ) | round(3) }}"
#
automation:
  #
  - alias: snickarboa_avfuktare
    id: Avfuktare
    trigger:
      - platform: state
        entity_id: binary_sensor.heatpump_emhass
      - platform: homeassistant
        event: start
    action:
      - choose:
          #
          - conditions:
              - condition: state
                state: "on"
                entity_id: binary_sensor.heatpump_emhass
            sequence:
              - service: humidifier.turn_on
                target:
                  entity_id: humidifier.snickarboa_avfuktare
          #
          - conditions:
              - condition: state
                state: "off"
                entity_id: binary_sensor.heatpump_emhass
            sequence:
              - service: humidifier.turn_off
                target:
                  entity_id: humidifier.snickarboa_avfuktare
  #
  - alias: Snickarboa värmare
    id: Snickarboa värmare
    trigger:
      - platform: state
        entity_id: binary_sensor.snickarboa_heater
      - platform: homeassistant
        event: start
    action:
      - choose:
          #
          - conditions:
              - condition: state
                state: "on"
                entity_id: binary_sensor.snickarboa_heater
            sequence:
              - service: climate.set_hvac_mode
                target:
                  entity_id: climate.snickarboa
                data:
                  hvac_mode: "heat"
          #
          - conditions:
              - condition: state
                state: "off"
                entity_id: binary_sensor.snickarboa_heater
            sequence:
              - service: climate.set_hvac_mode
                target:
                  entity_id: climate.snickarboa
                data:
                  hvac_mode: "off"
  #
  #
  - alias: Snickarboa belysning
    id: Snickarboa belysning
    trigger:
      - platform: state
        entity_id: binary_sensor.snickarboa_presence_light_automation_control
      - platform: homeassistant
        event: start
    action:
      - service: >
          {% if is_state('binary_sensor.snickarboa_presence_light_automation_control', 'on') %}
          light.turn_on
          {% elif is_state('binary_sensor.snickarboa_presence_light_automation_control', 'off') %}
          light.turn_off
          {% endif %}
        entity_id:
          - light.snickarboa_arbetsbank
          - light.snickarboa_spotlights
  #