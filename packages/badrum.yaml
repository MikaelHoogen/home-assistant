# =================================================================
# KONFIGURATION FÖR BADRUMMET
# =================================================================
# All logik för att styra enheter och automationer i badrummet.
# -----------------------------------------------------------------

# =================================================================
# ADAPTIVE LIGHTING-PROFIL
# =================================================================
# Justerar automatiskt färgtemperatur och ljusstyrka på lampan
# baserat på solens position.
# -----------------------------------------------------------------
adaptive_lighting:
  - name: Badrum
    lights:
    - light.badrum
    prefer_rgb_color: false
    transition: 30
    initial_transition: 1
    interval: 90
    min_brightness: 20
    max_brightness: 100
    min_color_temp: 2000
    max_color_temp: 4000
    sleep_brightness: 1
    sleep_color_temp: 2000
    sleep_rgb_or_color_temp: rgb_color
    sleep_rgb_color: [255, 161, 40]
    take_over_control: true
    detect_non_ha_changes: true
    adapt_only_on_bare_turn_on: true

# =================================================================
# INPUT NUMBERS (HJÄLPARE)
# =================================================================
# Ett justerbart tröskelvärde för när det ska anses vara
# "mörkt nog" för att tända belysningen.
# -----------------------------------------------------------------
input_number:
  badrum_light_level:
    name: Ljusstyrka badrum för belysning
    min: 0
    max: 200
    step: 10
    unit_of_measurement: lx
    icon: mdi:lightbulb-on

# =================================================================
# TEMPLATE-SENSORER
# =================================================================
# Dessa sensorer utgör grunden för automationen.
# -----------------------------------------------------------------
template:
  - binary_sensor:
      # Steg 1: Är det för ljust inne för att tända belysningen?
      # Har en "spärr" för att inte släckas direkt om lampan själv höjer ljusnivån.
      - name: badrum_lightlevel
        unique_id: badrum_lightlevel
        device_class: light
        delay_on:
          minutes: 5
        state: >
          {{ ( states('sensor.badrum_hue_motion_sensor_light_level') | float(0.0) > states('input_number.badrum_light_level') | float(0.0)
            and is_state('light.badrum', 'off') )
            or ( is_state('binary_sensor.badrum_lightlevel', 'on')
            and is_state('light.badrum', 'on') ) }}
      
      # En grundläggande närvarosensor med 7 minuters fördröjning.
      - name: badrum_presence
        unique_id: badrum_presence
        device_class: motion
        delay_off:
          minutes: 7
        state: >
          {{ is_state('binary_sensor.badrum_hue_motion_sensor_motion', 'on') }}
      
      # Steg 2: Den slutgiltiga kontrollsensorn som triggar automationen.
      - name: badrum_presence_light_automation_control
        unique_id: badrum_presence_light_automation_control
        state: >
          {{ is_state('binary_sensor.badrum_presence', 'on')
              and is_state('binary_sensor.badrum_lightlevel', 'off') }}

# =================================================================
# AUTOMATIONER
# =================================================================
# Tänder och släcker belysningen baserat på närvaro och ljusnivå.
# -----------------------------------------------------------------
automation:
  - alias: Badrum belysning
    id: badrum_belysning
    triggers:
      - trigger: state
        entity_id: binary_sensor.badrum_presence_light_automation_control
      - trigger: homeassistant
        event: start
    actions:
      - action: "light.turn_{{ iif(states('binary_sensor.badrum_presence_light_automation_control') == 'on', 'on', 'off') }}"
        target:
          entity_id:
            - light.badrum