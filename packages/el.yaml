utility_meter:
#
# Förbrukning
  accumulated_consumption_day_sannesholma_2181:
    source: sensor.accumulated_consumption_sannesholma_2181
    cycle: daily
  accumulated_consumption_week_sannesholma_2181:
    source: sensor.accumulated_consumption_sannesholma_2181
    cycle: weekly
  accumulated_consumption_month_sannesholma_2181:
    source: sensor.accumulated_consumption_sannesholma_2181
    cycle: monthly
  accumulated_consumption_year_sannesholma_2181:
    source: sensor.accumulated_consumption_sannesholma_2181
    cycle: yearly
#
# Kostnad från tibber
  accumulated_cost_hour_sannesholma_2181:
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: hourly
  accumulated_cost_day_sannesholma_2181:
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: daily
  accumulated_cost_week_sannesholma_2181:
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: weekly
  accumulated_cost_month_sannesholma_2181:
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: monthly
  accumulated_cost_year_sannesholma_2181:
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: yearly
#
# Total kostnad
  accumulated_cost_total_hour_sannesholma_2181:
    source: sensor.accumulated_total_cost_hour
    cycle: hourly
  accumulated_cost_total_day_sannesholma_2181:
    source: sensor.accumulated_total_cost_hour
    cycle: daily
  accumulated_cost_total_week_sannesholma_2181:
    source: sensor.accumulated_total_cost_hour
    cycle: weekly
  accumulated_cost_total_month_sannesholma_2181:
    source: sensor.accumulated_total_cost_hour
    cycle: monthly
  accumulated_cost_total_year_sannesholma_2181:
    source: sensor.accumulated_total_cost_hour
    cycle: yearly
#
# Kostnad nordpool
  accumulated_cost_ex_moms_hour_sannesholma_2181:
    source: sensor.accumulated_cost_ex_moms_hour
    cycle: hourly
  accumulated_cost_ex_moms_day_sannesholma_2181:
    source: sensor.accumulated_cost_ex_moms_hour
    cycle: daily
  accumulated_cost_ex_moms_week_sannesholma_2181:
    source: sensor.accumulated_cost_ex_moms_hour
    cycle: weekly
  accumulated_cost_ex_moms_month_sannesholma_2181:
    source: sensor.accumulated_cost_ex_moms_hour
    cycle: monthly
  accumulated_cost_ex_moms_year_sannesholma_2181:
    source: sensor.accumulated_cost_ex_moms_hour
    cycle: yearly
#
#
template:
    - sensor:
      #
#      - name: accumulated_cost_total_hour_measurement_sannesholma_2181
#        unique_id: accumulated_cost_total_hour_measurement_sannesholma_2181
#        unit_of_measurement: "SEK"
#        state_class: measurement
#        state: >
#          {{ states('sensor.accumulated_cost_total_hour_sannesholma_2181') }}
#
#      - name: accumulated_consumption_current_hour_measurement_sannesholma_2181
#        unique_id: accumulated_consumption_current_hour_measurement_sannesholma_2181
#        unit_of_measurement: "kWh"
#        state_class: measurement
#        state: >
#          {{ states('sensor.accumulated_consumption_current_hour_sannesholma_2181') }}
#
      ### Total Kostnad
      - name: accumulated_total_cost_hour
        unique_id: accumulated_total_cost_hour
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.accumulated_consumption_current_hour_sannesholma_2181')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.accumulated_consumption_current_hour_sannesholma_2181') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) }}"
#        state: "{{ ( states('sensor.accumulated_consumption_current_hour_sannesholma_2181') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) if is_number(states('sensor.accumulated_consumption_current_hour_sannesholma_2181')) }}"
      #
      # Total kostnad månad
      - name: accumulated_total_cost_month
        unique_id: accumulated_total_cost_month
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.monthly_cost_sannesholma_2181')) and is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) and is_number(states('sensor.elpris_abonnemang')) }}"
        state: >
          {{ ( states ('sensor.monthly_cost_sannesholma_2181') | float('not_a_number') + states('sensor.monthly_net_consumption_sannesholma_2181') | float('not_a_number') * ( ( states('sensor.avgift_elnat') | float / 100 + states('sensor.avgift_energiskatt') | float / 100 + states('sensor.elpris_abonnemang') | float ) ) ) | round(3) }}
      #
      # Total kostnad elnät månad
      - name: accumulated_total_cost_grid_month
        unique_id: accumulated_total_cost_grid_month
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) and is_number(states('sensor.elpris_abonnemang')) }}"
        state: >
          {{ ( states('sensor.monthly_net_consumption_sannesholma_2181') | float('not_a_number') * ( ( states('sensor.avgift_elnat') | float('naan') / 100 + states('sensor.avgift_energiskatt') | float('naan') / 100 + states('sensor.elpris_abonnemang') | float('naan') ) ) ) | round(3) }}
      #
      # Total besparing
      - name: accumulated_total_savings_month
        unique_id: accumulated_total_savings_month
        unit_of_measurement: SEK
        state_class: measurement
        availability: " {{ is_number(states('sensor.accumulated_total_cost_month')) and is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) and is_number(states('sensor.elpris_totalt_medel')) }}"
        state: >
          {{ ( states('sensor.monthly_net_consumption_sannesholma_2181') | float('not_a_number') * states('sensor.elpris_totalt_medel') | float('not_a_number') - states('sensor.accumulated_total_cost_month') | float('not_a_number') ) | round(2) }}
      #
      ### Kostnad exl moms och påslag
      - name: accumulated_cost_ex_moms_hour
        unique_id: accumulated_cost_ex_moms_hour
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.accumulated_consumption_current_hour_sannesholma_2181')) }}"
        state: >
          {{ ( states('sensor.accumulated_consumption_current_hour_sannesholma_2181') | float('not_a_number') * states('sensor.elpris') | float('not_a_number') ) | round(3) }}
      #
      ### Medelpris nordpool imorgon
      #
      - name: elpris_imorgon_medel 
        unique_id: elpris_imorgon_medel
        unit_of_measurement: SEK
        state_class: measurement
        availability: "{{ is_state_attr('sensor.elpris', 'tomorrow_valid', True) and state_attr('sensor.elpris', 'tomorrow')[0] != None }}"
        state: "{{ ( state_attr('sensor.elpris', 'tomorrow') | sum / 24 ) | round(3)}}"
      ### Maxpris nordpool imorgon
      #
      - name: elpris_imorgon_max
        unique_id: elpris_imorgon_max
        unit_of_measurement: SEK
        state_class: measurement
        availability: "{{ is_state_attr('sensor.elpris', 'tomorrow_valid', True) and state_attr('sensor.elpris', 'tomorrow')[0] != None }}"
        state: "{{ (state_attr('sensor.elpris', 'tomorrow') | sort(reverse=true))[0] }}"
      #
      # {{ is_state_attr('sensor.elpris', 'tomorrow_valid', True) and state_attr('sensor.elpris', 'tomorrow')[0] != None }}
      #
      # {{ ( state_attr('sensor.elpris', 'tomorrow') | sum / 25 ) | round(3)}}
#
####################### Medelpriser ##########################################################
#
      ### Medel exl moms och påslag
      - name: average_price_ex_moms_last_month
        unique_id: average_price_ex_moms_last_month
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        state: "{{ ( state_attr('sensor.accumulated_cost_ex_moms_month_sannesholma_2181', 'last_period') | float(0.0) / state_attr('sensor.accumulated_consumption_month_sannesholma_2181', 'last_period') | float(0.0) ) | round(3) }}"
      #
      ### Medel med moms och påslag förra månaden
      - name: average_price_last_month
        unique_id: average_price_last_month
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        state: "{{ ( state_attr('sensor.accumulated_cost_month_sannesholma_2181', 'last_period') | float(0.0) / state_attr('sensor.accumulated_consumption_month_sannesholma_2181', 'last_period') | float(0.0) ) | round(2) }}"
      #
      ### Medel med moms och påslag
      - name: average_price
        unique_id: average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        state: "{{ ( states('sensor.accumulated_cost_month_sannesholma_2181') | float(0.0) / states('sensor.accumulated_consumption_month_sannesholma_2181') | float(0.0) ) | round(2) }}"
      #
      ### Medel tibber
      - name: average_price_consumption_tibber
        unique_id: average_price_consumption_tibber
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.monthly_cost_sannesholma_2181')) and is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) }}"
        state: "{{ ( states('sensor.monthly_cost_sannesholma_2181') | float('naan') / states('sensor.monthly_net_consumption_sannesholma_2181') | float('naan') ) | round(2) }}"
      #
      ### Medel totalt # Tas bort?
      - name: average_total_price
        unique_id: average_total_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        state: "{{ ( states('sensor.accumulated_cost_total_month_sannesholma_2181') | float(0.0) / states('sensor.accumulated_consumption_month_sannesholma_2181') | float(0.0) ) | round(2) }}"
      #
      #
      - name: average_total_price_new
        unique_id: average_total_price_new
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.accumulated_total_cost_month')) and is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) }}"
        state: "{{ ( states('sensor.accumulated_total_cost_month') | float('naan') / states('sensor.monthly_net_consumption_sannesholma_2181') | float('naan') ) | round(2) }}"
      #

        #
        # Värmepump ##########################################################################
      - name: heatpump_heat_average_price
        unique_id: heatpump_heat_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_heat_manad_kostnad')) and states('sensor.heatpump_heat_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.heatpump_heat_manad_kostnad') | float(0.0) / states('sensor.heatpump_heat_manad') | float(0.0) ) | round(2) }}"
        #
      - name: heatpump_hotwater_average_price
        unique_id: heatpump_hotwater_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_hotwater_manad_kostnad')) and states('sensor.heatpump_hotwater_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.heatpump_hotwater_manad_kostnad') | float(0.0) / states('sensor.heatpump_hotwater_manad') | float(0.0) ) | round(2) }}"
        #
        #
        # Eaton ##########################################################################
      - name: eaton3s_average_price
        unique_id: eaton3s_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.eaton3s_manad_kostnad')) and states('sensor.eaton3s_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.eaton3s_manad_kostnad') | float(0.0) / states('sensor.eaton3s_manad') | float(0.0) ) | round(2) }}"
        #
        # Avfuktare ##########################################################################
      - name: avfuktare_average_price
        unique_id: avfuktare_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.avfuktare_manad_kostnad')) and states('sensor.avfuktare_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.avfuktare_manad_kostnad') | float(0.0) / states('sensor.avfuktare_manad') | float(0.0) ) | round(2) }}"
        #
        # Snickarboa värmare ##########################################################################
      - name: snickarboa_heater_average_price
        unique_id: snickarboa_heater_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.snickarboa_heater_manad_kostnad')) and states('sensor.snickarboa_heater_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.snickarboa_heater_manad_kostnad') | float(0.0) / states('sensor.snickarboa_heater_manad') | float(0.0) ) | round(2) }}"
        #
        # Diskmaskin ##########################################################################
      - name: diskmaskin_average_price
        unique_id: diskmaskin_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.diskmaskin_manad_kostnad')) and states('sensor.diskmaskin_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.diskmaskin_manad_kostnad') | float(0.0) / states('sensor.diskmaskin_manad') | float(0.0) ) | round(2) }}"
        #
        # Torktumlare ##########################################################################
      - name: torktumlare_average_price
        unique_id: torktumlare_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.torktumlare_manad_kostnad')) and states('sensor.torktumlare_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.torktumlare_manad_kostnad') | float(0.0) / states('sensor.torktumlare_manad') | float(0.0) ) | round(2) }}"
        #
        # Tvättmaskin ##########################################################################
      - name: tvattmaskin_average_price
        unique_id: tvattmaskin_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.tvattmaskin_manad_kostnad')) and states('sensor.tvattmaskin_manad') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.tvattmaskin_manad_kostnad') | float(0.0) / states('sensor.tvattmaskin_manad') | float(0.0) ) | round(2) }}"
        #
homeassistant:
  customize:
    sensor.accumulated_consumption_sannesholma_2181:
      state_class: total_increasing
    sensor.electricity_price_sannesholma_2181:
      state_class: measurement
    sensor.elpris:
      state_class: measurement
    #
    sensor.heatpump_heat_manad_kostnad:
      friendly_name: Värmepump värme
      icon: mdi:radiator
    sensor.eaton3s_manad_kostnad:
      friendly_name: Eaton3s
      icon: mdi:server
    sensor.heatpump_hotwater_manad_kostnad:
      friendly_name: Varmvatten
      icon: mdi:water
    sensor.avfuktare_manad_kostnad:
      friendly_name: Avfuktare
      icon: mdi:air-humidifier
    sensor.snickarboa_heater_manad_kostnad:
      friendly_name: Snickarboa värme
      icon: mdi:radiator
    sensor.diskmaskin_manad_kostnad:
      friendly_name: Diskmaskin
    sensor.torktumlare_manad_kostnad:
      friendly_name: Torktumlare
      icon: mdi:tumble-dryer
    sensor.tvattmaskin_manad_kostnad:
      friendly_name: Tvättmaskin
      icon: mdi:washing-machine