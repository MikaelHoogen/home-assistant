################# Circadian ##############################################
adaptive_lighting:
  - name: Allrum
    lights:
      - light.allrum_tak_1
      - light.allrum_tak_2
      - light.allrum_tak_3
      - light.allrum_laslampa
      - light.allrum_klotlampa
    prefer_rgb_color: false
    transition: 30
    initial_transition: 1
    interval: 90
    min_brightness: 30
    max_brightness: 100
    min_color_temp: 2100
    max_color_temp: 4000
    sleep_brightness: 1
    sleep_color_temp: 2000
    sleep_rgb_or_color_temp: rgb_color
    sleep_rgb_color: [255, 161, 40]
    #sunrise_time: "07:00:00" # override the sunrise time
    #    sunrise_offset:
    #    sunset_time: "20:00:00"
    #    sunset_offset: 1800  # in seconds or '00:15:00'
    # If another source calls light.turn_on while the lights are on and being adapted, disable Adaptive Lighting.
    take_over_control: true
    detect_non_ha_changes: true
    # Whether to keep adapting the lights (false) or to only adapt the lights as soon as they are turned on (true).
    only_once: false
    separate_turn_on_commands: false
  #
  - name: Allrum belysning filament
    lights:
      - light.allrum_fonster_betong
      - light.allrum_huslampa
    prefer_rgb_color: false
    transition: 45
    initial_transition: 5
    interval: 90
    min_brightness: 1
    max_brightness: 45
    min_color_temp: 2100
    max_color_temp: 4000
    sleep_brightness: 1
    sleep_color_temp: 2000
    #sunrise_time: "07:00:00" # override the sunrise time
    #    sunrise_offset: -00:05:00
    #    sunset_time: '20:00'
    #    sunset_offset: 1800  # in seconds or '00:15:00'
    # If another source calls light.turn_on while the lights are on and being adapted, disable Adaptive Lighting.
    take_over_control: true
    detect_non_ha_changes: true
    # Whether to keep adapting the lights (false) or to only adapt the lights as soon as they are turned on (true).
    only_once: false
#
light:
  - platform: group
    name: Allrum grupp
    unique_id: allrum_grupp
    entities:
      - light.allrum_tak_1
      - light.allrum_tak_2
      - light.allrum_tak_3
      - light.allrum_laslampa
      - light.allrum_klotlampa
      - light.allrum_fonster_betong
      - light.allrum_huslampa
#
#input_boolean:
#  allrum_presence_flagga:
#    name: Flagga för närvaro i allrum
#
sensor:
  - platform: template
    sensors:
      ############# Temperatur #########################
      netatmo_allrum_temperature:
        unit_of_measurement: "°C"
        friendly_name: Allrum termostat temperatur
        value_template: "{{ state_attr('climate.netatmo_allrum', 'current_temperature') }}"
#
binary_sensor:
  #
  - platform: template
    sensors:
      allrum_belysning_filament_lightlevel:
        friendly_name: Allrum
        delay_off:
          minutes: 5
        value_template: >-
          {{ states('sensor.entre_hue_outdoor_motion_sensor_light_level') | float < states('input_number.fonsterbelysning_light_level') | float }}
      #
      allrum_belysning_filament_automation_control:
        friendly_name: Allrum
        value_template: >-
          {{ is_state('binary_sensor.allrum_belysning_filament_lightlevel', 'on')
            and is_state('input_boolean.film_spelar', 'off')
            and is_state('input_boolean.sovdags', 'off') }}
      #
      ### Närvarostyrd belysning
      allrum_presence_light_automation_control:
        friendly_name: Allrum
        value_template: >-
          {{ is_state('binary_sensor.allrum_presence', 'on')
            and is_state('input_boolean.film_spelar', 'off') }}
      #
      # 
      allrum_presence_short:
        delay_off:
          minutes: 20
        value_template: >-
          {{ is_state('binary_sensor.allrum_rorelsesensor', 'on')
          or is_state('binary_sensor.allrum_hue_motion_sensor_motion', 'on')
          or is_state('media_player.allrum', 'playing') }}
      # TODO
      # Läsning
      ### Närvaro
      allrum_presence:
        device_class: motion
        friendly_name: Allrum
        value_template: >-
          {{ is_state('binary_sensor.allrum_presence_short', 'on') }}
#
#
automation:
#
#
  - alias: Allrum belysning fönster
    trigger:
      - platform: state
        entity_id: binary_sensor.allrum_belysning_filament_automation_control
      - platform: homeassistant
        event: start
    action:
      - service: >
          {% if is_state('binary_sensor.allrum_belysning_filament_automation_control', 'on') %}
          light.turn_on
          {% elif is_state('binary_sensor.allrum_belysning_filament_automation_control', 'off') %}
          light.turn_off
          {% endif %}
        entity_id:
          - light.allrum_fonster_betong
          - light.allrum_huslampa
#
#
  - alias: Allrum belysning
    trigger:
      - platform: state
        entity_id: binary_sensor.allrum_presence_light_automation_control
      - platform: homeassistant
        event: start
    action:
      - service: >
          {% if is_state('binary_sensor.allrum_presence_light_automation_control', 'on') %}
          light.turn_on
          {% elif is_state('binary_sensor.allrum_presence_light_automation_control', 'off') %}
          light.turn_off
          {% endif %}
        entity_id:
          - light.allrum
#
#
  - alias: Allrum knapp vid fåtölj
    trigger:
      - platform: event
        event_type: deconz_event
        event_data:
          id: allrum_knapp
          event: 1002
    action:
      - service: light.toggle
        target:
          entity_id: light.allrum
#
#
  - alias: Allrum knapp vid tv
    trigger:
      - platform: event
        event_type: deconz_event
        event_data:
          id: allrum_smart_switch
    action:
      - choose:
        # Double press
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.event == 1004 }}'
            - condition: state
              entity_id: input_boolean.film
              state: "off"
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.film
        #
        # Short press
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.event == 1002 }}'
          sequence:
            - service: >
                {% if is_state('media_player.allrum', 'playing') %}
                media_player.media_pause
                {% else %}
                media_player.media_play
                {% endif %}
              entity_id:
                - media_player.allrum
        # Long press
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.event == 1001 }}'
          sequence:
            - service: input_boolean.toggle
              entity_id: input_boolean.film_spelar