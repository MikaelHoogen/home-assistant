# =================================================================
# KONFIGURATION FÖR ENERGI & FÖRBRUKNING
# =================================================================
# All logik för att spåra total energiförbrukning, solproduktion,
# batterianvändning och relaterade kostnader/besparingar.
# -----------------------------------------------------------------

# =================================================================
# UTILITY METERS
# =================================================================
# Dessa entiteter fungerar som digitala mätarställningar. De tar en
# ständigt ökande sensor och delar upp den i logiska tidsperioder.
# -----------------------------------------------------------------
utility_meter:
  # --- Förbrukning från Tibber ---
  accumulated_consumption_day_sannesholma_2181:
    unique_id: accumulated_consumption_day_sannesholma_2181
    source: sensor.accumulated_consumption_sannesholma_2181
    cycle: daily
  accumulated_consumption_month_sannesholma_2181:
    unique_id: accumulated_consumption_month_sannesholma_2181
    source: sensor.accumulated_consumption_sannesholma_2181
    cycle: monthly
  accumulated_consumption_year_sannesholma_2181:
    unique_id: accumulated_consumption_year_sannesholma_2181
    source: sensor.accumulated_consumption_sannesholma_2181
    cycle: yearly

  # --- Kostnad från Tibber (endast elpris) ---
  accumulated_cost_hour_sannesholma_2181:
    unique_id: accumulated_cost_hour_sannesholma_2181
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: hourly
  accumulated_cost_day_sannesholma_2181:
    unique_id: accumulated_cost_day_sannesholma_2181
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: daily
  accumulated_cost_month_sannesholma_2181:
    unique_id: accumulated_cost_month_sannesholma_2181
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: monthly
  accumulated_cost_year_sannesholma_2181:
    unique_id: accumulated_cost_year_sannesholma_2181
    source: sensor.accumulated_cost_sannesholma_2181
    cycle: yearly

  # --- Total kostnad (inkl. nätavgifter etc.) ---
  accumulated_cost_total_day_sannesholma_2181:
    unique_id: accumulated_cost_total_day_sannesholma_2181
    source: sensor.accumulated_total_cost_hour
    cycle: daily
  accumulated_cost_total_week_sannesholma_2181:
    unique_id: accumulated_cost_total_week_sannesholma_2181
    source: sensor.accumulated_total_cost_hour
    cycle: weekly

  # --- Självförbrukning från solceller ---
  solar_energy_self_usage_hour:
    unique_id: solar_energy_self_usage_hour
    source: sensor.solar_energy_self_usage
    periodically_resetting: false
    cycle: hourly
  solar_energy_self_usage_month:
    unique_id: solar_energy_self_usage_month
    source: sensor.solar_energy_self_usage
    periodically_resetting: false
    cycle: monthly

  # --- Batteri - Urladdning ---
  solar_battery_discharged_hour:
    unique_id: solar_battery_discharged_hour
    source: sensor.solar_battery_total_discharged
    periodically_resetting: false
    cycle: hourly
  solar_battery_discharged_month:
    unique_id: solar_battery_discharged_month
    source: sensor.solar_battery_total_discharged
    periodically_resetting: false
    cycle: monthly

  # --- Batteri - Laddning (totalt) ---
  solar_battery_charged_hour:
    unique_id: solar_battery_charged_hour
    source: sensor.solar_battery_total_charged
    periodically_resetting: false
    cycle: hourly
  solar_battery_charged_month:
    unique_id: solar_battery_charged_month
    source: sensor.solar_battery_total_charged
    periodically_resetting: false
    cycle: monthly

  # --- Batteri - Laddning från elnätet ---
  solar_battery_charged_from_grid_hour:
    unique_id: solar_battery_charged_from_grid_hour
    source: sensor.solar_battery_total_charged_from_grid
    periodically_resetting: false
    cycle: hourly
  solar_battery_charged_from_grid_month:
    unique_id: solar_battery_charged_from_grid_month
    source: sensor.solar_battery_total_charged_from_grid
    periodically_resetting: false
    cycle: monthly

  # --- Batteri - Laddning från solceller ---
  solar_battery_charged_from_solar_hour:
    unique_id: solar_battery_charged_from_solar_hour
    source: sensor.solar_battery_total_charged_from_solar
    periodically_resetting: false
    cycle: hourly
  solar_battery_charged_from_solar_month:
    unique_id: solar_battery_charged_from_solar_month
    source: sensor.solar_battery_total_charged_from_solar
    periodically_resetting: false
    cycle: monthly

  # --- Avkastning & Kostnad - Batteri ---
  solar_battery_discharged_savings_month:
    unique_id: solar_battery_discharged_savings_month
    source: sensor.solar_battery_discharged_savings_hour
    cycle: monthly
  solar_battery_charged_from_grid_month_cost:
    unique_id: solar_battery_charged_from_grid_month_cost
    source: sensor.solar_battery_charged_from_grid_hour_cost
    cycle: monthly
  solar_battery_charged_from_solar_month_cost:
    unique_id: solar_battery_charged_from_solar_month_cost
    source: sensor.solar_battery_charged_from_solar_hour_cost
    cycle: monthly
  solar_battery_charged_from_solar_month_cost_only_elpris:
    unique_id: solar_battery_charged_from_solar_month_cost_only_elpris
    source: sensor.solar_battery_charged_from_solar_hour_cost_only_elpris
    cycle: monthly

  # --- Avkastning & Kostnad - Solceller (totalt) ---
  solar_accumulated_total_return_month:
    unique_id: solar_accumulated_total_return_month
    source: sensor.solar_accumulated_total_return_day
    cycle: monthly
  solar_accumulated_total_savings_day:
    unique_id: solar_accumulated_total_savings_day
    source: sensor.solar_accumulated_total_savings_hour
    cycle: daily
  solar_accumulated_total_savings_month:
    unique_id: solar_accumulated_total_savings_month
    source: sensor.solar_accumulated_total_savings_hour
    cycle: monthly
  solar_accumulated_total_earnings_month:
    unique_id: solar_accumulated_total_earnings_month
    source: sensor.solar_accumulated_total_earnings_day
    cycle: monthly

# =================================================================
# TEMPLATE-SENSORER
# =================================================================
# Dessa sensorer utför beräkningar och skapar ny data baserat
# på andra sensorer.
# -----------------------------------------------------------------
template:
  - binary_sensor:
      # En enkel flagga som är 'on' när huset köper el från elnätet.
      - name: power_from_grid
        unique_id: power_from_grid
        availability: "{{ is_number(states('sensor.power_sannesholma_2181')) }}"
        state: "{{ states('sensor.power_sannesholma_2181') | float(0) > 0}}"

  - sensor:
      # --- Effektförbrukning (Realtid) ---
      # Visar husets totala effektförbrukning just nu, oavsett källa.
      - name: power_usage
        unique_id: power_usage
        unit_of_measurement: W
        state_class: measurement
        availability: >
          {{ is_number(states('sensor.solar_belastning')) }}
        state: >
          {{ ( states('sensor.solar_belastning') | float(0) | abs ) | round(0) }}
      - name: power_usage_filtered
        unique_id: power_usage_filtered
        unit_of_measurement: W
        state_class: measurement
        availability: >
          {{ is_number(states('sensor.solar_belastning')) }}
        state: >
          {{ ( states('sensor.solar_belastning') | float(0) | abs ) | round(0) }}

      # --- Total kostnad (förbrukad el från nätet) ---
      # Beräknar den totala kostnaden för den innevarande timmen.
      - name: accumulated_total_cost_hour
        unique_id: accumulated_total_cost_hour
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.accumulated_consumption_current_hour_sannesholma_2181')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.accumulated_consumption_current_hour_sannesholma_2181') | float('naan') * states('sensor.elpris_totalt_sek') | float('naan') ) | round(3) }}"
      # Beräknar den totala kostnaden för den innevarande månaden.
      - name: accumulated_total_cost_month
        unique_id: accumulated_total_cost_month
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.monthly_cost_sannesholma_2181')) and is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) and is_number(states('sensor.elpris_grid')) }}"
        state: >
          {{ ( states ('sensor.monthly_cost_sannesholma_2181') | float('naan') + states('sensor.monthly_net_consumption_sannesholma_2181') | float('naan') * states('sensor.elpris_grid') | float('naan') ) | round(3) }}
      # Isolerar kostnaden för enbart elnätet (avgifter) för månaden.
      - name: accumulated_total_cost_grid_month
        unique_id: accumulated_total_cost_grid_month
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) and is_number(states('sensor.avgift_elnat')) and is_number(states('sensor.avgift_energiskatt')) }}"
        state: >
          {{ ( states('sensor.monthly_net_consumption_sannesholma_2181') | float('naan') * ( ( states('sensor.avgift_elnat') | float('naan') / 100 + states('sensor.avgift_energiskatt') | float('naan') / 100 ) ) ) | round(3) }}

      # --- Total besparing (jämfört med medelpris) ---
      # Beräknar hur mycket som sparats jämfört med om all el köpts till månadens medelpris.
      - name: accumulated_total_savings_month
        unique_id: accumulated_total_savings_month
        unit_of_measurement: SEK
        state_class: total_increasing
        availability: " {{ is_number(states('sensor.accumulated_total_cost_month')) and is_number(states('sensor.monthly_net_consumption_sannesholma_2181')) and is_number(states('sensor.elpris_totalt_medel')) }}"
        state: >
          {{ ( states('sensor.monthly_net_consumption_sannesholma_2181') | float('naan') * states('sensor.elpris_totalt_medel') | float('naan') - states('sensor.accumulated_total_cost_month') | float('naan') ) | round(2) }}

      # --- Självförbrukad effekt från solceller (Realtid) ---
      # Beräknar hur mycket av den producerade solenergin som huset använder just nu.
      - name: solar_power_self_usage
        unique_id: solar_power_self_usage
        unit_of_measurement: W
        state_class: measurement
        availability: >
          {{ is_number(states('sensor.solar_power_photovoltaics')) and is_number(states('sensor.solar_battery_charging')) }}
        state: >
          {{ max(0, ( states('sensor.solar_power_photovoltaics') | float(0)
          - states('sensor.solar_battery_charging') | float(0)
          - states('sensor.power_production_sannesholma_2181') | float(0) ) | round(0) ) }}

      # --- Total avkastning (Besparing + Förtjänst) ---
      # Summerar värdet av självförbrukad el och såld el för dagen.
      - name: solar_accumulated_total_return_day
        unique_id: solar_accumulated_total_return_day
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.solar_accumulated_total_savings_day')) and is_number(states('sensor.solar_accumulated_total_earnings_day')) }}"
        state: "{{ ( states('sensor.solar_accumulated_total_savings_day') | float('naan') + states('sensor.solar_accumulated_total_earnings_day') | float('naan') ) | round(3) }}"
      # Beräknar det monetära värdet av den självförbrukade elen för timmen.
      - name: solar_accumulated_total_savings_hour
        unique_id: solar_accumulated_total_savings_hour
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.solar_energy_self_usage_hour')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.solar_energy_self_usage_hour') | float('naan') * states('sensor.elpris_totalt_sek') | float('naan') ) | round(3) }}"
      # Beräknar den totala förtjänsten från såld el (inkl. nätnytta) för dagen.
      - name: solar_accumulated_total_earnings_day
        unique_id: solar_accumulated_total_earnings_day
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.accumulated_reward_sannesholma_2181')) and is_number(states('sensor.accumulated_production_sannesholma_2181')) }}"
        state: >
          {{ ( states ('sensor.accumulated_reward_sannesholma_2181') | float('naan')
          + states('sensor.accumulated_production_sannesholma_2181') | float('naan')
          * ( states('sensor.elpris_natnytta') | float('naan') + 0.6 ) ) | round(3) }}

      # --- Batteri - Avkastning & Kostnader ---
      # Beräknar den totala nettoavkastningen från batteriet för månaden.
      - name: solar_battery_total_return_month
        unique_id: solar_battery_total_return_month
        unit_of_measurement: "SEK"
        state_class: total
        availability: >
          {{ has_value('sensor.solar_battery_discharged_savings_month')
            and has_value('sensor.solar_battery_charged_from_grid_month_cost')
            and has_value('sensor.solar_battery_charged_from_solar_month_cost') }}
        state: >
          {{ states('sensor.solar_battery_discharged_savings_month') | float('naan')
          - states('sensor.solar_battery_charged_from_grid_month_cost') | float('naan')
          - states('sensor.solar_battery_charged_from_solar_month_cost') | float('naan') }}
      # Beräknar det monetära värdet av den el som urladdats från batteriet under timmen.
      - name: solar_battery_discharged_savings_hour
        unique_id: solar_battery_discharged_savings_hour
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.solar_battery_discharged_hour')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.solar_battery_discharged_hour') | float('naan') * states('sensor.elpris_totalt_sek') | float('naan') ) | round(3) }}"
      # Beräknar kostnaden för att ladda batteriet från elnätet under timmen.
      - name: solar_battery_charged_from_grid_hour_cost
        unique_id: solar_battery_charged_from_grid_hour_cost
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.solar_battery_charged_from_grid_hour')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.solar_battery_charged_from_grid_hour') | float('naan') * states('sensor.elpris_totalt_sek') | float('naan') ) | round(3) }}"
      # Beräknar "alternativkostnaden" för att ladda batteriet med solenergi (vad man hade tjänat om man sålt elen istället).
      - name: solar_battery_charged_from_solar_hour_cost
        unique_id: solar_battery_charged_from_solar_hour_cost
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.solar_battery_charged_from_solar_hour')) and is_number(states('sensor.elpris_produktion')) }}"
        state: "{{ ( states('sensor.solar_battery_charged_from_solar_hour') | float('naan') * states('sensor.elpris_produktion') | float('naan') ) | round(3) }}"
      - name: solar_battery_charged_from_solar_hour_cost_only_elpris
        unique_id: solar_battery_charged_from_solar_hour_cost_only_elpris
        unit_of_measurement: "SEK"
        state_class: total_increasing
        availability: "{{ is_number(states('sensor.solar_battery_charged_from_solar_hour')) and is_number(states('sensor.elpris')) }}"
        state: "{{ ( states('sensor.solar_battery_charged_from_solar_hour') | float('naan') * states('sensor.elpris') | float('naan') ) | round(3) }}"