sensor:
  - platform: template
    sensors:
      ### Indoor
      indoor_ps:
        friendly_name: "Ånghalt inomhus ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.netatmo_sannesholma_weather_station_temperature') | float / 100 ) ** 8.02 }}"
      #
      indoor_vs:
        friendly_name: "Ånghalt inomhus ps"
        device_class: "humidity"
        value_template: "{{ states('sensor.indoor_ps') | float / ( 461.4 * ( states('sensor.netatmo_sannesholma_weather_station_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      indoor_v:
        friendly_name: "Ånghalt inomhus v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.indoor_vs') | float * ( states('sensor.netatmo_sannesholma_weather_station_humidity') | float / 100 ) ) | round(2) }}"
      #
      ### Utomhus
      utomhus_ps:
        friendly_name: "Ånghalt utomhus ps"
        device_class: "humidity"
        value_template: >
          {% if states('sensor.netatmo_sannesholma_weather_station_utomhus_entre_temperature') | float >= 0.0 %}
          {{ 288.68 * ( 1.098 + states('sensor.netatmo_sannesholma_weather_station_utomhus_entre_temperature') | float / 100 ) ** 8.02 }}
          {% else %}
          {{ 4.689 * ( 1.486 + states('sensor.netatmo_sannesholma_weather_station_utomhus_entre_temperature') | float / 100 ) ** 12.3 }}
          {% endif %}
      #
      utomhus_vs:
        friendly_name: "Ånghalt utomhus vs"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ states('sensor.utomhus_ps') | float / ( 461.4 * ( states('sensor.netatmo_sannesholma_weather_station_utomhus_entre_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      utomhus_v:
        friendly_name: "Ånghalt utomhus v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.utomhus_vs') | float * ( states('sensor.netatmo_sannesholma_weather_station_utomhus_entre_humidity') | float / 100 ) ) | round(2) }}"
      #
      ### Tvättstuga
      tvattstuga_ps:
        friendly_name: "Ånghalt tvättstuga ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.tvattstuga_temperatur') | float / 100 ) ** 8.02 }}"
      #
      tvattstuga_vs:
        friendly_name: "Ånghalt tvättstuga vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.tvattstuga_ps') | float / ( 461.4 * ( states('sensor.tvattstuga_temperatur') | float + 273.2 ) ) * 1000 }}"
      #
      tvattstuga_v:
        friendly_name: "Ånghalt tvättstuga v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.tvattstuga_vs') | float * ( states('sensor.tvattstuga_humidity') | float / 100 ) ) | round(2) }}"
      #
      ### Sovrum
      sovrum_ps:
        friendly_name: "Ånghalt sovrum ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.netatmo_rosa_van_temperature') | float / 100 ) ** 8.02 }}"
      #
      sovrum_vs:
        friendly_name: "Ånghalt sovrum vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.sovrum_ps') | float / ( 461.4 * ( states('sensor.netatmo_rosa_van_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      sovrum_v:
        friendly_name: "Ånghalt sovrum v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.sovrum_vs') | float * ( states('sensor.netatmo_rosa_van_humidity') | float / 100 ) ) | round(2) }}"
      #
      ### Allrum
      allrum_ps:
        friendly_name: "Ånghalt allrum ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.netatmo_sannesholma_weather_station_allrum_temperature') | float / 100 ) ** 8.02 }}"
      #
      allrum_vs:
        friendly_name: "Ånghalt allrum vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.allrum_ps') | float / ( 461.4 * ( states('sensor.netatmo_sannesholma_weather_station_allrum_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      allrum_v:
        friendly_name: "Ånghalt allrum v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.allrum_vs') | float * ( states('sensor.netatmo_sannesholma_weather_station_allrum_humidity') | float / 100 ) ) | round(2) }}"
      ### Badrum
      badrum_ps:
        friendly_name: "Ånghalt badrum ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.badrum_temperature') | float / 100 ) ** 8.02 }}"
      #
      badrum_vs:
        friendly_name: "Ånghalt badrum vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.badrum_ps') | float / ( 461.4 * ( states('sensor.badrum_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      badrum_v:
        friendly_name: "Ånghalt badrum v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.badrum_vs') | float * ( states('sensor.badrum_humidity') | float / 100 ) ) | round(2) }}"
#
      ### Snickarboa
      snickarboa_ps:
        friendly_name: "Ånghalt snickarboa ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.snickarboa_temperature') | float / 100 ) ** 8.02 }}"
      #
      snickarboa_vs:
        friendly_name: "Ånghalt snickarboa vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.snickarboa_ps') | float / ( 461.4 * ( states('sensor.snickarboa_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      snickarboa_v:
        friendly_name: "Ånghalt snickarboa v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.snickarboa_vs') | float * ( states('sensor.snickarboa_humidity') | float / 100 ) ) | round(2) }}"
#
      ### Vardagsrum
      vardagsrum_ps:
        friendly_name: "Ånghalt vardagsrum ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.vardagsrum_temperature') | float / 100 ) ** 8.02 }}"
      #
      vardagsrum_vs:
        friendly_name: "Ånghalt vardagsrum vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.vardagsrum_ps') | float / ( 461.4 * ( states('sensor.vardagsrum_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      vardagsrum_v:
        friendly_name: "Ånghalt vardagsrum v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.vardagsrum_vs') | float * ( states('sensor.vardagsrum_humidity') | float / 100 ) ) | round(2) }}"
#
      ### barnrum
      barnrum_ps:
        friendly_name: "Ånghalt barnrum ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.barnrum_temperature') | float / 100 ) ** 8.02 }}"
      #
      barnrum_vs:
        friendly_name: "Ånghalt barnrum vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.barnrum_ps') | float / ( 461.4 * ( states('sensor.barnrum_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      barnrum_v:
        friendly_name: "Ånghalt barnrum v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.barnrum_vs') | float * ( states('sensor.barnrum_humidity') | float / 100 ) ) | round(2) }}"
#
      ### gastrum
      gastrum_ps:
        friendly_name: "Ånghalt gastrum ps"
        device_class: "humidity"
        value_template: "{{ 288.68 * ( 1.098 + states('sensor.gastrum_temperature') | float / 100 ) ** 8.02 }}"
      #
      gastrum_vs:
        friendly_name: "Ånghalt gastrum vs"
        device_class: "humidity"
        value_template: "{{ states('sensor.gastrum_ps') | float / ( 461.4 * ( states('sensor.gastrum_temperature') | float + 273.2 ) ) * 1000 }}"
      #
      gastrum_v:
        friendly_name: "Ånghalt gastrum v"
        unit_of_measurement: "g/m3"
        device_class: "humidity"
        value_template: "{{ ( states('sensor.gastrum_vs') | float * ( states('sensor.gastrum_humidity') | float / 100 ) ) | round(2) }}"

