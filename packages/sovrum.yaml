################# Circadian ##############################################
adaptive_lighting:
  - name: Sovrum
    lights:
    - light.walk_in_closet_1
    - light.walk_in_closet_2
    - light.walk_in_closet_3
    - light.sovrum_fonster
    - light.sovrum_byra
    - light.sovrum_sang_mikael
    - light.sovrum_sang_lina
    prefer_rgb_color: false
    transition: 30
    initial_transition: 5
    interval: 90
    min_brightness: 20
    max_brightness: 100
    min_color_temp: 2100
    max_color_temp: 4000
    sleep_brightness: 1
    sleep_color_temp: 2000
#    sunrise_time: "08:00:00"  # override the sunrise time
#    sunrise_offset:
    sunset_time: "20:00:00"
#    sunset_offset: 1800  # in seconds or '00:15:00'
    # If another source calls light.turn_on while the lights are on and being adapted, disable Adaptive Lighting.
    take_over_control: true
    detect_non_ha_changes: true
    # Whether to keep adapting the lights (false) or to only adapt the lights as soon as they are turned on (true).
    only_once: false
    separate_turn_on_commands: false
#
sensor:
  - platform: template
    sensors:
############# Temperatur #########################
      netatmo_sovrum_temperature:
        unit_of_measurement: "Â°C"
        friendly_name: Sovrum termostat temperatur
        value_template: "{{ state_attr('climate.netatmo_sovrum', 'current_temperature') }}"
#
binary_sensor:
#
  - platform: template
    sensors:
      sovrum_belysning_lightlevel:
        friendly_name: Sovrum
        delay_off:
          minutes: 30
        value_template: >-
          {{ states('sensor.entre_hue_outdoor_motion_sensor_light_level') | float < 400 }}
      sovrum_belysning_automation_control:
        friendly_name: Sovrum
        value_template: >-
          {{ is_state('binary_sensor.sovrum_belysning_lightlevel', 'on')
            and is_state('input_boolean.film_spelar', 'off')
            and is_state('input_boolean.sovdags', 'off') }}
#
automation:
#
- alias: Sovrum belysning
  trigger:
  - platform: state
    entity_id: binary_sensor.sovrum_belysning_automation_control
  - platform: homeassistant
    event: start
  action:
  - service: >
      {% if is_state('binary_sensor.sovrum_belysning_automation_control', 'on') %}
      light.turn_on
      {% elif is_state('binary_sensor.sovrum_belysning_automation_control', 'off') %}
      light.turn_off
      {% endif %}
    entity_id:
    - light.sovrum_fonster
    - light.sovrum_byra