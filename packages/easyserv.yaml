# Easyserv värmepump REST API
#
sensor:
  - platform: rest
    resource: !secret easyserv
    verify_ssl: false
    name: heatpump
    unique_id: heatpump
    json_attributes:
      - HotwaterTemp1
      - HotwaterTemp2
      - IndoorTemp
      - OutdoorTemp
      - RadiatorForwardTemp
      - RadiatorReturnTemp
      - HeatCarrierInTemp
      - HeatCarrierOutTemp
      - BrineInTemp
      - BrineOutTemp
      - HotGasTemp
      - CompressorState
      - ColdCircuitPumpState
      - HeatCircuitPumpState
      - RadiatorPumpState
      - AddHeat2State
      - AddHeat1State
      - SwitchValve1State
      - HeatingSetpointTemp
      - HotwaterSetpointTemp
      - AddHeatLevelPercent
      - SumAlarm
      - Integral
    value_template: '{{ value_json.CompressorState }}'
#
###############################################################################
#
  - platform: history_stats
    name: heatpump_compressor_today
    entity_id: binary_sensor.heatpump_compressor_state
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    duration: 24:00:00
#    end: "{{ now().replace(microsecond=0) }}"
#
#
  - platform: history_stats
    name: heatpump_coldcircuitpump_today
    entity_id: binary_sensor.heatpump_coldcircuitpump_state
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    duration: 24:00:00
#    end: "{{ now().replace(microsecond=0) }}"
#
  - platform: history_stats
    name: heatpump_switchvalve_today
    entity_id: binary_sensor.heatpump_switchvalve_state
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    duration: 24:00:00
#    end: "{{ now().replace(microsecond=0) }}"
#
  - platform: history_stats
    name: heatpump_heat_today
    entity_id: binary_sensor.heatpump_heat
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    duration: 24:00:00
#    end: "{{ now().replace(microsecond=0) }}"
#
  - platform: history_stats
    name: heatpump_hotwater_today
    entity_id: binary_sensor.heatpump_hotwater
    state: "on"
    type: time
    start: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0) }}"
    duration: 24:00:00
    #end: "{{ now().replace(microsecond=0) }}"
#
###############################################################################
utility_meter:
  # Förbrukning
  heatpump_timme:
    unique_id: heatpump_timme
    source: sensor.heatpump_consumption_today
    cycle: hourly
  heatpump_dag:
    unique_id: heatpump_dag
    source: sensor.heatpump_consumption_today
    cycle: daily
  heatpump_vecka:
    unique_id: heatpump_vecka
    source: sensor.heatpump_consumption_today
    cycle: weekly
  heatpump_manad:
    unique_id: heatpump_manad
    source: sensor.heatpump_consumption_today
    cycle: monthly
  heatpump_ar:
    unique_id: heatpump_ar
    source: sensor.heatpump_consumption_today
    cycle: yearly
# Förbrukning från sol eller nät
  heatpump_timme_from:
    unique_id: heatpump_timme_from
    source: sensor.heatpump_consumption_today
    cycle: hourly
    tariffs:
      - grid
      - solar
  heatpump_dag_from:
    unique_id: heatpump_dag_from
    source: sensor.heatpump_consumption_today
    cycle: daily
    tariffs:
      - grid
      - solar
  heatpump_manad_from:
    unique_id: heatpump_manad_from
    source: sensor.heatpump_consumption_today
    cycle: monthly
    tariffs:
      - grid
      - solar
  heatpump_ar_from:
    unique_id: heatpump_ar_from
    source: sensor.heatpump_consumption_today
    cycle: yearly
    tariffs:
      - grid
      - solar
  #
  # Kostnad
  #
  heatpump_timme_kostnad:
    unique_id: heatpump_timme_kostnad
    source: sensor.heatpump_kostnad
    cycle: hourly
  heatpump_dag_kostnad:
    unique_id: heatpump_dag_kostnad
    source: sensor.heatpump_kostnad
    cycle: daily
  heatpump_vecka_kostnad:
    unique_id: heatpump_vecka_kostnad
    source: sensor.heatpump_kostnad
    cycle: weekly
  heatpump_manad_kostnad:
    unique_id: heatpump_manad_kostnad
    source: sensor.heatpump_kostnad
    cycle: monthly
  heatpump_ar_kostnad:
    unique_id: heatpump_ar_kostnad
    source: sensor.heatpump_kostnad
    cycle: yearly
#
# Varmvatten förbrukning
  heatpump_hotwater_timme:
    unique_id: heatpump_hotwater_timme
    source: sensor.heatpump_hotwater_consumption_today
    cycle: hourly
  heatpump_hotwater_dag:
    unique_id: heatpump_hotwater_dag
    source: sensor.heatpump_hotwater_consumption_today
    cycle: daily
  heatpump_hotwater_vecka:
    unique_id: heatpump_hotwater_vecka
    source: sensor.heatpump_hotwater_consumption_today
    cycle: weekly
  heatpump_hotwater_manad:
    unique_id: heatpump_hotwater_manad
    source: sensor.heatpump_hotwater_consumption_today
    cycle: monthly
  heatpump_hotwater_ar:
    unique_id: heatpump_hotwater_ar
    source: sensor.heatpump_hotwater_consumption_today
    cycle: yearly
# Varmvatten förbrukning från sol eller nät
  heatpump_hotwater_timme_from:
    unique_id: heatpump_hotwater_timme_from
    source: sensor.heatpump_hotwater_consumption_today
    cycle: hourly
    tariffs:
      - grid
      - solar
  heatpump_hotwater_dag_from:
    unique_id: heatpump_hotwater_dag_from
    source: sensor.heatpump_hotwater_consumption_today
    cycle: daily
    tariffs:
      - grid
      - solar
  heatpump_hotwater_manad_from:
    unique_id: heatpump_hotwater_manad_from
    source: sensor.heatpump_hotwater_consumption_today
    cycle: monthly
    tariffs:
      - grid
      - solar
  heatpump_hotwater_ar_from:
    unique_id: heatpump_hotwater_ar_from
    source: sensor.heatpump_hotwater_consumption_today
    cycle: yearly
    tariffs:
      - grid
      - solar
  #
  # Varmvatten kostnad
  heatpump_hotwater_timme_kostnad:
    unique_id: heatpump_hotwater_timme_kostnad
    source: sensor.heatpump_hotwater_kostnad
    cycle: hourly
  heatpump_hotwater_dag_kostnad:
    unique_id: heatpump_hotwater_dag_kostnad
    source: sensor.heatpump_hotwater_kostnad
    cycle: daily
  heatpump_hotwater_vecka_kostnad:
    unique_id: heatpump_hotwater_vecka_kostnad
    source: sensor.heatpump_hotwater_kostnad
    cycle: weekly
  heatpump_hotwater_manad_kostnad:
    unique_id: eatpump_hotwater_manad_kostnad
    source: sensor.heatpump_hotwater_kostnad
    cycle: monthly
  heatpump_hotwater_ar_kostnad:
    unique_id: heatpump_hotwater_ar_kostnad
    source: sensor.heatpump_hotwater_kostnad
    cycle: yearly
#
# Värme förbrukning
  heatpump_heat_timme:
    unique_id: heatpump_heat_timme
    source: sensor.heatpump_heat_consumption_today
    cycle: hourly
  heatpump_heat_dag:
    unique_id: heatpump_heat_dag
    source: sensor.heatpump_heat_consumption_today
    cycle: daily
  heatpump_heat_vecka:
    unique_id: heatpump_heat_vecka
    source: sensor.heatpump_heat_consumption_today
    cycle: weekly
  heatpump_heat_manad:
    unique_id: heatpump_heat_manad
    source: sensor.heatpump_heat_consumption_today
    cycle: monthly
  heatpump_heat_ar:
    unique_id: heatpump_heat_ar
    source: sensor.heatpump_heat_consumption_today
    cycle: yearly
#
# Förbrukning från sol eller nät
  heatpump_heat_timme_from:
    unique_id: heatpump_heat_timme_from
    source: sensor.heatpump_heat_consumption_today
    cycle: hourly
    tariffs:
      - grid
      - solar
  heatpump_heat_dag_from:
    unique_id: heatpump_heat_dag_from
    source: sensor.heatpump_heat_consumption_today
    cycle: daily
    tariffs:
      - grid
      - solar
  heatpump_heat_manad_from:
    unique_id: heatpump_heat_manad_from
    source: sensor.heatpump_heat_consumption_today
    cycle: monthly
    tariffs:
      - grid
      - solar
  heatpump_heat_ar_from:
    unique_id: heatpump_heat_ar_from
    source: sensor.heatpump_heat_consumption_today
    cycle: yearly
    tariffs:
      - grid
      - solar
#
# Värme kostnad
#
  heatpump_heat_timme_kostnad:
    unique_id: heatpump_heat_timme_kostnad
    source: sensor.heatpump_heat_kostnad
    cycle: hourly
  heatpump_heat_dag_kostnad:
    unique_id: heatpump_heat_dag_kostnad
    source: sensor.heatpump_heat_kostnad
    cycle: daily
  heatpump_heat_manad_kostnad:
    unique_id: heatpump_heat_manad_kostnad
    source: sensor.heatpump_heat_kostnad
    cycle: monthly
  heatpump_heat_ar_kostnad:
    unique_id: eatpump_heat_ar_kostnad
    source: sensor.heatpump_heat_kostnad
    cycle: yearly
################################################################################
#
#
template:
  - binary_sensor:
      ### Blockera Kompressor
      - name: heatpump_block
        unique_id: heatpump_block
        state: >
          {{ is_state('binary_sensor.tvattmaskin_load', 'on')
              or is_state('binary_sensor.diskmaskin_load', 'on')
              or is_state('binary_sensor.heatpump_emhass', 'off') }}
#
#
      - name: varmegolv_block
        unique_id: varmegolv_block
        delay_off:
          minutes: 10
        state: >
          {{ is_state('binary_sensor.electricity_price_sannesholma_2181_max', 'on')
            or is_state('binary_sensor.heatpump_run_time', 'off')
            or ( is_state('binary_sensor.electricity_price_sannesholma_2181_above_avg_price', 'on') 
            and is_state('binary_sensor.electricity_price_sannesholma_2181_input_low', 'on') ) }}
#
      ########################################################################
      # Värme
      - name: heatpump_heat
        unique_id: heatpump_heat
        state: >
          {{ is_state('binary_sensor.heatpump_coldcircuitpump_state', 'on')
            and is_state('binary_sensor.heatpump_switchvalve_state', 'off') }}
      # Varmvatten
      - name: heatpump_hotwater
        unique_id: heatpump_hotwater
        state: >
          {{ ( is_state('binary_sensor.heatpump_coldcircuitpump_state', 'on') or is_state('binary_sensor.heatpump_compressor_state', 'on') )
            and is_state('binary_sensor.heatpump_switchvalve_state', 'on') }}
  #
      - name: heatpump_addheat1state
        unique_id: heatpump_addheat1state
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >
          {{ state_attr('sensor.heatpump', 'AddHeat1State') > 0 }}
  #
      - name: heatpump_addheat2state
        unique_id: heatpump_addheat2state
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >
          {{ state_attr('sensor.heatpump', 'AddHeat2State') > 0 }}
      # "Kompressor"
      - name: heatpump_compressor_state
        unique_id: heatpump_compressor_state
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >-
          {{ state_attr('sensor.heatpump', 'CompressorState') > 0 }}
      # Växelventil
      - name: heatpump_switchvalve_state
        unique_id: heatpump_switchvalve_state
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >-
          {{ state_attr('sensor.heatpump', 'SwitchValve1State') > 0 }}
      # Radiatorpump
      - name: heatpump_radiatorpump_state
        unique_id: heatpump_radiatorpump_state
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >-
          {{ state_attr('sensor.heatpump', 'RadiatorPumpState') > 0 }}
      # Köldbärarpump
      - name: heatpump_coldcircuitpump_state
        unique_id: heatpump_coldcircuitpump_state
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >-
          {{ state_attr('sensor.heatpump', 'ColdCircuitPumpState') > 0 }}
      # Värmekretspump
      - name: heatpump_heatcircuitpumpstate_state
        unique_id: heatpump_heatcircuitpumpstate_state
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >-
          {{ state_attr('sensor.heatpump', 'HeatCircuitPumpState') > 0 }}
      # Summalarm
      - name: heatpump_sumalarm
        unique_id: heatpump_sumalarm
        availability: "{{ is_number(states('sensor.heatpump'))}}"
        state: >-
          {{ state_attr('sensor.heatpump', 'SumAlarm') > 0 }}

  #
  - sensor:
      # Kompressor
      - name: "Kompressor aktiv effekt P"
        unique_id: heatpump_compressor_real_power
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% if is_state('binary_sensor.heatpump_compressor_state', 'on') %}
          {{ 400.0 * 5.5 }}
          {% elif is_state('binary_sensor.heatpump_compressor_state', 'off') %}
          0.0
          {% endif %}
      #
      #
      # Köldbärarpump aktiv effekt P
      - unique_id: heatpump_coldcircuitpump_real_power
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% if is_state('binary_sensor.heatpump_coldcircuitpump_state', 'on') %}
          {{ 400.0 * 1.5 }}
          {% elif is_state('binary_sensor.heatpump_coldcircuitpump_state', 'off') %}
          0.0
          {% endif %}
#
      # 
      - name: heatpump_power
        unique_id: heatpump_power
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {{ states('sensor.heatpump_coldcircuitpump_real_power') | float(0) + states('sensor.heatpump_compressor_real_power') | float(0) }}
#
#
      ### Förbrukning
      - name: heatpump_consumption_today
        unique_id: heatpump_consumption_today
        unit_of_measurement: "kWh"
        state_class: total_increasing
        device_class: energy
        availability: "{{ is_number(states('sensor.heatpump_compressor_today')) and is_number(states('sensor.heatpump_coldcircuitpump_today')) }}"
        state: >
          {{ ( 400.0 * 5.5 * states('sensor.heatpump_compressor_today') | float('nan') / 1000.0 + 400.0 * 1.5 * states('sensor.heatpump_coldcircuitpump_today') | float('nan') / 1000.0 ) | round(3) }}
      ##
      # Varmvatten
      - name: heatpump_hotwater_power
        unique_id: heatpump_hotwater_power
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% if is_state('binary_sensor.heatpump_switchvalve_state', 'on') %}
          {{ states('sensor.heatpump_coldcircuitpump_real_power') | float(0.0) + states('sensor.heatpump_compressor_real_power') | float(0.0) }}
          {% elif is_state('binary_sensor.heatpump_switchvalve_state', 'off') %}
          0.0
          {% endif %}
#
      - name: heatpump_hotwater_consumption_today
        unique_id: heatpump_hotwater_consumption_today
        unit_of_measurement: "kWh"
        state_class: total_increasing
        device_class: energy
        availability: "{{ is_number(states('sensor.heatpump_hotwater_today')) }}"
        state: >
          {{ 400.0 * 7.0 * states('sensor.heatpump_hotwater_today') | float('nan') / 1000.0  | round(3) }}
      #
      # Värme
      - name: heatpump_heat_power
        unique_id: heatpump_heat_power
        unit_of_measurement: "W"
        state_class: measurement
        device_class: power
        state: >
          {% if is_state('binary_sensor.heatpump_switchvalve_state', 'off') %}
          {{ states('sensor.heatpump_coldcircuitpump_real_power') | float(0.0) + states('sensor.heatpump_compressor_real_power') | float(0.0) }}
          {% elif is_state('binary_sensor.heatpump_switchvalve_state', 'on') %}
          0.0
          {% endif %}
#
      - name: heatpump_heat_consumption_today
        unique_id: heatpump_heat_consumption_today
        unit_of_measurement: "kWh"
        state_class: total_increasing
        device_class: energy
        availability: "{{ is_number(states('sensor.heatpump_heat_today')) }}"
        state: >
          {{ 400.0 * 7.0 * states('sensor.heatpump_heat_today') | float('nan') / 1000.0  | round(3) }}
      #
      ####################################################################################################################################################
      ### Kostnad
      - name: heatpump_kostnad
        unique_id: heatpump_kostnad
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_timme_from_grid')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.heatpump_timme_from_grid') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) }}"
#
      - name: heatpump_hotwater_kostnad
        unique_id: heatpump_hotwater_kostnad
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_hotwater_timme_from_grid')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.heatpump_hotwater_timme_from_grid') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) }}"
#
      - name: heatpump_heat_kostnad
        unique_id: heatpump_heat_kostnad
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_heat_timme_from_grid')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.heatpump_heat_timme_from_grid') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) }}"
      ####################################################################################################################################################
      ### Besparing
      - name: heatpump_timme_from_solar_savings
        unique_id: heatpump_from_solar_savings
        unit_of_measurement: "SEK"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_timme_from_solar')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.heatpump_timme_from_solar') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) }}"
#
      - name: heatpump_hotwater_timme_from_solar_savings
        unique_id: heatpump_hotwater_from_solar_savings
        unit_of_measurement: "SEK"
        availability: "{{ is_number(states('sensor.heatpump_hotwater_timme_from_solar')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.heatpump_hotwater_timme_from_solar') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) }}"
#
      - name: heatpump_heat_timme_from_solar_savings
        unique_id: heatpump_heat_from_solar_savings
        unit_of_measurement: "SEK"
        availability: "{{ is_number(states('sensor.heatpump_heat_timme_from_solar')) and is_number(states('sensor.elpris_totalt_sek')) }}"
        state: "{{ ( states('sensor.heatpump_heat_timme_from_solar') | float('not_a_number') * states('sensor.elpris_totalt_sek') | float('not_a_number') ) | round(3) }}"
######## Medelpris ##########################################################################
      - name: heatpump_heat_average_price
        unique_id: heatpump_heat_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_heat_manad_kostnad')) and states('sensor.heatpump_heat_manad_from_grid') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.heatpump_heat_manad_kostnad') | float(0.0) / states('sensor.heatpump_heat_manad_from_grid') | float(0.0) ) | round(2) }}"
        #
      - name: heatpump_hotwater_average_price
        unique_id: heatpump_hotwater_average_price
        unit_of_measurement: "SEK/kWh"
        state_class: measurement
        availability: "{{ is_number(states('sensor.heatpump_hotwater_manad_kostnad')) and states('sensor.heatpump_hotwater_manad_from_grid') | float(0.0) > 0 }}"
        state: "{{ ( states('sensor.heatpump_hotwater_manad_kostnad') | float(0.0) / states('sensor.heatpump_hotwater_manad_from_grid') | float(0.0) ) | round(2) }}"
        #
        #########################################################################################################################################################
#       Returledning
      - name: heatpump_radiator_return
        unique_id: heatpump_radiator_return
        unit_of_measurement: "°C"
        state_class: measurement
        device_class: temperature
        state: "{{ state_attr('sensor.heatpump', 'RadiatorReturnTemp') }}"
      # Börvärde
      - name: heatpump_heatinghetpointemp
        unique_id: heatpump_heatinghetpointemp
        unit_of_measurement: "°C"
        state_class: measurement
        device_class: temperature
        state: "{{ state_attr('sensor.heatpump', 'HeatingSetpointTemp') }}"
      # Värmebärare ut
      - name: heatpump_heatcarrier_out
        unique_id: heatpump_heatcarrier_out
        unit_of_measurement: "°C"
        state_class: measurement
        device_class: temperature
        state: "{{ state_attr('sensor.heatpump', 'HeatCarrierOutTemp') }}"
      # Köldbärare in
      - name: heatpump_brine_in
        unique_id: heatpump_brine_in
        state_class: measurement
        device_class: temperature
        unit_of_measurement: "°C"
        state: "{{ state_attr('sensor.heatpump', 'BrineInTemp') }}"
      # Köldbärare ut
      - name: heatpump_brine_out
        unique_id: heatpump_brine_out
        state_class: measurement
        device_class: temperature
        unit_of_measurement: "°C"
        state: "{{ state_attr('sensor.heatpump', 'BrineOutTemp') }}"
      # Hetgas
      - name: heatpump_hotgas
        unique_id: heatpump_hotgas
        unit_of_measurement: "°C"
        state_class: measurement
        device_class: temperature
        state: "{{ state_attr('sensor.heatpump', 'HotGasTemp') }}"
      # Varmvatten
      - name: heatpump_hotwater_temp
        unique_id: heatpump_hotwater_temp
        unit_of_measurement: "°C"
        state_class: measurement
        device_class: temperature
        state: "{{ state_attr('sensor.heatpump', 'HotwaterTemp1') }}"
      # Varmvatten
      - name: heatpump_hotwater_temp_2
        unique_id: heatpump_hotwater_temp_2
        unit_of_measurement: "°C"
        state_class: measurement
        device_class: temperature
        state: "{{ state_attr('sensor.heatpump', 'HotwaterTemp2') }}"
      # Utomhus-temp
      - name: heatpump_outdoor_temp
        unique_id: heatpump_outdoor_temp
        unit_of_measurement: "°C"
        state_class: measurement
        device_class: temperature
        state: "{{ state_attr('sensor.heatpump', 'OutdoorTemp') }}"
      # Gradminuter
      - name: heatpump_integral
        unique_id: heatpump_integral
        state_class: measurement
        state: "{{ state_attr('sensor.heatpump', 'Integral') }}"
#
homeassistant:
  customize:
    sensor.heatpump_timme:
      friendly_name: Värmepump timme
      device_class: energy
    #
#
automation:
  - alias: Heatpump blockera
    id: Heatpump blockera
    trigger:
      - platform: state
        entity_id: binary_sensor.heatpump_block
#      - platform: homeassistant
#        event: start
    action:
      - service: >
          {% if is_state('binary_sensor.heatpump_block', 'on') %}
          switch.turn_on
          {% elif is_state('binary_sensor.heatpump_block', 'off') %}
          switch.turn_off
          {% endif %}
        entity_id:
          - switch.heatpump
#
  - alias: Heatpump energikalla
    id: Heatpump energikalla
    trigger:
      - platform: state
        entity_id:
          - binary_sensor.power_from_grid
      - platform: homeassistant
        event: start
    action:
      - choose:
        #
          - conditions:
              - condition: state
                state: 'on'
                entity_id: binary_sensor.power_from_grid
            sequence:
              - service: select.select_option
                target:
                  entity_id:
                    - select.heatpump_timme_from
                    - select.heatpump_dag_from
                    - select.heatpump_manad_from
                    - select.heatpump_ar_from
                    - select.heatpump_hotwater_timme_from
                    - select.heatpump_hotwater_dag_from
                    - select.heatpump_hotwater_manad_from
                    - select.heatpump_hotwater_ar_from
                    - select.heatpump_heat_timme_from
                    - select.heatpump_heat_dag_from
                    - select.heatpump_heat_manad_from
                    - select.heatpump_heat_ar_from
                data:
                  option: "grid"
          #
          - conditions:
              - condition: state
                state: 'off'
                entity_id: binary_sensor.power_from_grid
            sequence:
              - service: select.select_option
                target:
                  entity_id:
                    - select.heatpump_timme_from
                    - select.heatpump_dag_from
                    - select.heatpump_manad_from
                    - select.heatpump_ar_from
                    - select.heatpump_hotwater_timme_from
                    - select.heatpump_hotwater_dag_from
                    - select.heatpump_hotwater_manad_from
                    - select.heatpump_hotwater_ar_from
                    - select.heatpump_heat_timme_from
                    - select.heatpump_heat_dag_from
                    - select.heatpump_heat_manad_from
                    - select.heatpump_heat_ar_from
                data:
                  option: "solar"
        #